name: Publish Docker image

on: [push, workflow_dispatch]

jobs:
  push_logstash:
    name: Push Detector container image to Docker Hub
    runs-on: ubuntu-latest
    environment: PROTO
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: idmefv2prototype/logstash

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: logstash/
          file: logstash/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
            LOGSTASH_VERSION=${{ vars.LOGSTASH_VERSION }}

  push_elastic:
    name: Push Elasticsearch container image to Docker Hub
    runs-on: ubuntu-latest
    environment: PROTO
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: idmefv2prototype/elasticsearch

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: elasticsearch/
          file: elasticsearch/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
            ELASTIC_VERSION=${{ vars.ELASTIC_VERSION }}

  push_setup:
    name: Push Setup container image to Docker Hub
    runs-on: ubuntu-latest
    environment: PROTO
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: idmefv2prototype/setup

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: setup/
          file: setup/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
            ELASTIC_VERSION=${{ vars.ELASTIC_VERSION }}

  push_gui:
    name: Push GUI container image to Docker Hub
    runs-on: ubuntu-latest
    environment: PROTO
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: idmefv2prototype/gui

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: gui/
          file: gui/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}

  push_postgres:
    name: Push Postgres container image to Docker Hub
    runs-on: ubuntu-latest
    environment: PROTO
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: idmefv2prototype/postgres

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: postgres/
          file: postgres/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}

  push_kafdrop:
    name: Push Kafdrop container image to Docker Hub
    runs-on: ubuntu-latest
    environment: PROTO
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: idmefv2prototype/kafdrop

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: kafdrop/
          file: kafdrop/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
            KAFDROP_VERSION=${{ vars.KAFDROP_VERSION }}

  push_zoo:
    name: Push Zoo container image to Docker Hub
    runs-on: ubuntu-latest
    environment: PROTO
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: idmefv2prototype/zoo

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: zoo/
          file: zoo/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
            ZOO_VERSION=${{ vars.ZOO_VERSION }}

  push_kafka:
    name: Push kafka container image to Docker Hub
    runs-on: ubuntu-latest
    environment: PROTO
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: idmefv2prototype/kafka

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: kafka/
          file: kafka/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          build-args: |
            KAFKA_VERSION=${{ vars.KAFKA_VERSION }}
