input {
  tcp {
    port                       => 6517
    dns_reverse_lookup_enabled => false
    # Use a filter to decode the input in a subfield
    codec                      => plain
    add_field                  => {
      "[@metadata][source]" => "NXLog"
    }
  }
}

filter {
  json {
    source => "[message]"
    target => "[Attachment][RawLog][Content]"
  }

  if "_jsonparsefailure" in [tags] {
    drop {}
  }

  # Extracts things that look like IP addresses, Email addresses and URIs
  # so CTI enrichment can analyze them.
  ruby {
    path          => "/usr/share/logstash/config/scripts/extraction.rb"
    script_params => {
      'source' => '[Attachment][RawLog][Content][Message]'
    }

    add_field     => {
      "[Attachment][RawLog][ContentType]"             => "application/json"
      '[Attachment][RawLog][Content][host][ip]'       => '%{[host]}'
      '[Attachment][RawLog][Content][event][created]' => '%{@timestamp}'
    }

  }

  prune {
    whitelist_names => [
      # Top-level IDMEF attributes
      'Version',
      'ID',
      'Entity',
      'Category',
      'Cause',
      'Description',
      'Status',
      'Severity',
      'Confidence',
      'Note',
      'CreateTime',
      'StartTime',
      'CeaseTime',
      'DeleteTime',
      'AltNames',
      'AltCategory',
      'Ref',
      'CorrelID',
      'AggrCondition',
      'PredID',
      'RelID',

      # IDMEF classes
      'Analyzer',
      'Sensor',
      'Source',
      'Target',
      'Vector',
      'Attachment',
      'Observable'
    ]
  }
}

output {
  pipeline { send_to => "output-norm" }
}
