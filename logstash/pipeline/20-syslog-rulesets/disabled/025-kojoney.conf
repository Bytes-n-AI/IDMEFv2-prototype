input {
  pipeline { address => "syslog-ruleset-kojoney" }
}

filter {
  mutate { add_tag => "ruleset-kojoney" }
  if "\[SSHChannel" in [Attachment][RawLog][Content][message] or "\[SSHService" in [Attachment][RawLog][Content][message]{
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_20000>)\[SSHService ssh-userauth on SSHServerTransport,%{INT},%{IP:[Attachment][RawLog][Content][source][address]}\] %{NOTSPACE:[Attachment][RawLog][Content][user][target][name]} trying auth password",

          
          "(?<rule_20001>)\[SSHService ssh-userauth on SSHServerTransport,%{INT},%{IP:[Attachment][RawLog][Content][source][address]}\] %{NOTSPACE:[Attachment][RawLog][Content][user][target][name]} authenticated with password",

          
          "(?<rule_20002>)\[SSHChannel session \(%{INT}\) on SSHService ssh-connection on SSHServerTransport,%{INT:Id},%{IP:[Attachment][RawLog][Content][source][address]}\] (executing .*|COMMAND .*)",

          
          "(?<rule_20003>)\[SSHChannel session \(%{INT}\) on SSHService ssh-connection on SSHServerTransport,%{INT:Id},%{IP:[Attachment][RawLog][Content][source][address]}\] Saved the file (?<Path>.*) requested by the attacker",

          
          "(?<rule_20004>)\[SSHChannel session \(%{INT}\) on SSHService ssh-connection on SSHServerTransport,%{INT},%{IP:[Attachment][RawLog][Content][source][address]}\] Error downloading file (?<Path>.*) request by attacker"
        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
      remove_tag => [ "_grokparsefailure" ]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
