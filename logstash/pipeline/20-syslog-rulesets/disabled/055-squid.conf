input {
  pipeline { address => "syslog-ruleset-squid" }
}

filter {
  mutate { add_tag => "ruleset-squid" }
  if "Acceptin" in [Attachment][RawLog][Content][message] or "Squid" in [Attachment][RawLog][Content][message] or "Disabled" in [Attachment][RawLog][Content][message] or "DENIED" in [Attachment][RawLog][Content][message] {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_1801>)Starting Squid Cache version %{DATA:version} for %{DATA:distribution}\.\.\.",

          
          "(?<rule_1802>)Accepting HTTP connections at %{IP:[Attachment][RawLog][Content][destination][address]}, port %{POSINT:[Attachment][RawLog][Content][destination][port]:int}, FD \d+",

          
          "(?<rule_1803>)Accepting ICP messages at %{IP:[Attachment][RawLog][Content][destination][address]}, port %{POSINT:[Attachment][RawLog][Content][destination][port]:int}, FD \d+",

          
          "(?<rule_1804>)Accepting HTCP messages on port %{POSINT:[Attachment][RawLog][Content][destination][port]:int}, FD \d+",

          
          "(?<rule_1805>)Accepting WCCP messages on port %{POSINT:[Attachment][RawLog][Content][destination][port]:int}, FD \d+",

          
          "(?<rule_1806>)HTCP Disabled",

          
          "(?<rule_1807>)WCCP Disabled",

          
          "(?<rule_1808>)Squid Parent: child process %{INT:process_id} exited due to signal %{INT:signal_id}"

        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
