input {
  pipeline { address => "syslog-ruleset-citrix-netscaler" }
}

filter {
  mutate { add_tag => "ruleset-citrix-netscaler" }
  if [Attachment][RawLog][Content][message] =~ "\<[^>]+\> .* (UI CMD_EXECUTED|TRAP_SENT|STATECHANGE|DEVICEUP)" {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_25100>)\<[^>]+\> %{IP:[Attachment][RawLog][Content][destination][address]} [^ ]+ [^:]+: UI CMD_EXECUTED \d+ :  User %{NOTSPACE:[Attachment][RawLog][Content][user][name]} - Remote_ip %{IP:[Attachment][RawLog][Content][source][address]} - Command \"(?<command>[^\"]+)\" - Status \"Success\"",

          
          "(?<rule_25101>)\<[^>]+\> %{IP:[Attachment][RawLog][Content][destination][address]} [^ ]+ [^:]+: UI CMD_EXECUTED \d+ [^:]+:  User %{NOTSPACE:[Attachment][RawLog][Content][user][name]} - Remote_ip %{IP:[Attachment][RawLog][Content][source][address]} - Command \"(?<command>[^\"]+)\" - Status \"ERROR",

          
          "(?<rule_25102>)\<[^>]+\> %{IP:[Attachment][RawLog][Content][source][address]} \S+ \S+ \S+ \S+ : SNMP TRAP_SENT \d+ : %{NOTSPACE:type} (?<descr>[^\)]+\))",

          
          "(?<rule_25103>)\<[^>]+\> %{IP:[Attachment][RawLog][Content][source][address]} \S+ \S+ \S+ \S+ : EVENT STATECHANGE \d+ : (?<data>.*)",

          
          "(?<rule_25104>)\<[^>]+\> %{IP:[Attachment][RawLog][Content][source][address]} \S+ \S+ \S+ \S+ : EVENT DEVICEUP \d+ : (?<data>.*)"
        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
