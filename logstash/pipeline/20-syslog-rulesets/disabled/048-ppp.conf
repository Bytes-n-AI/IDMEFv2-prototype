input {
  pipeline { address => "syslog-ruleset-ppp" }
}

filter {
  mutate { add_tag => "ruleset-ppp" }
  if [Attachment][RawLog][Content][process][name] in ["ppp", "pptpd"] {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          #"%{NOTSPACE:interface}: Phase: %{NOTSPACE:[Attachment][RawLog][Content][user][target][name]} Input: RESPONSE \(%{INT:number} bytes from (%{NOTSPACE:[Attachment][RawLog][Content][user][name]})\)",

          
          "(?<rule_10100>)%{NOTSPACE:interface}: Phase: %{NOTSPACE:[Attachment][RawLog][Content][user][name]} Output: SUCCESS",

          
          "(?<rule_10101>)%{NOTSPACE:interface}: Phase: %{NOTSPACE:[Attachment][RawLog][Content][user][name]} Output: FAILURE"

          
          #"CTRL: %{NOTSPACE:user} %{NOTSPACE:[Attachment][RawLog][Content][user][name]} PPP\[\d+\]",

          
          
        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
