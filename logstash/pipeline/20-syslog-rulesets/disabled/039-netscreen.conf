input {
  pipeline { address => "syslog-ruleset-netscreen" }
}

filter {
  mutate { add_tag => "ruleset-netscreen" }
  if "system-emergency-" in [Attachment][RawLog][Content][message] or "system-alert-" in [Attachment][RawLog][Content][message] {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_4400>)system-emergency-%{INT:id}: (?<data>.+)! From %{IP:[Attachment][RawLog][Content][source][address]}?:%{POSINT:[Attachment][RawLog][Content][source][port]:int} to %{IP:[Attachment][RawLog][Content][destination][address]}?:%{POSINT:[Attachment][RawLog][Content][destination][port]}, proto %{NOTSPACE:protocol} \(zone %{NOTSPACE:zone}\s+int\s+(?<desc>\S.+)\). Occurred %{INT:occured} times",

          
          "(?<rule_4401>)system-alert-%{INT:id}: (?<data>.+)! From %{IP:[Attachment][RawLog][Content][source][address]}?:%{POSINT:[Attachment][RawLog][Content][source][port]:int} to %{IP:[Attachment][RawLog][Content][destination][address]}?:%{POSINT:[Attachment][RawLog][Content][destination][port]}, proto %{NOTSPACE:protocol} \(zone %{NOTSPACE:zone}\s+int\s+(?<desc>\S.+)\). Occurred %{INT:occured} times"
        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
