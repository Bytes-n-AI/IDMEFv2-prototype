input {
  pipeline { address => "syslog-ruleset-paloalto" }
}

filter {
  mutate { add_tag => "ruleset-paloalto" }
  if "THREAT" in [Attachment][RawLog][Content][message] or "SYSTEM" in [Attachment][RawLog][Content][message] or "CONFIG" in [Attachment][RawLog][Content][message] {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_24601>)%{DATA},THREAT,%{DATA}",

          
          "(?<rule_24602>)%{DATA},SYSTEM,%{DATA},Authentication failed for user %{NOTSPACE:[Attachment][RawLog][Content][user][target][name]} via ([^\s]+) from %{IP:[Attachment][RawLog][Content][source][address]}",

          
          "(?<rule_24603>)%{DATA},SYSTEM,%{DATA},User %{NOTSPACE:[Attachment][RawLog][Content][user][target][name]} logged in via %{DATA:auth} from %{IP:[Attachment][RawLog][Content][source][address]}",

          
          "(?<rule_24604>)%{DATA},SYSTEM,%{DATA}, Accepted password for %{NOTSPACE:[Attachment][RawLog][Content][user][target][name]} from %{IP:[Attachment][RawLog][Content][source][address]} port %{POSINT:[Attachment][RawLog][Content][source][port]:int} ssh",

          
          "(?<rule_24605>)%{DATA},SYSTEM,%{DATA},Connected to %{DATA:server_name}: %{IP:[Attachment][RawLog][Content][target][address]}",

          
          "(?<rule_24606>)%{DATA},SYSTEM,%{DATA} package upgraded from version %{DATA:previous_version} to %{DATA:new_version} by %{NOTSPACE:[Attachment][RawLog][Content][user][target][name]}"
        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
      remove_tag => [ "_grokparsefailure" ]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
