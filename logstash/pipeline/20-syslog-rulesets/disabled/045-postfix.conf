input {
  pipeline { address => "syslog-ruleset-postfix" }
}

filter {
  mutate { add_tag => "ruleset-postfix" }
  if "postfix/" in [Attachment][RawLog][Content][process][name] {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_3500>)%{NOTSPACE:id}: reject: RCPT from (?<domain>[\w\-\.]+)\[%{IP:[Attachment][RawLog][Content][source][address]}\]: %{DATA:data} Relay access denied; from=\<\S+\> to=\<%{NOTSPACE:[Attachment][RawLog][Content][user][name]}\> proto=SMTP",

          
          "(?<rule_3501>)starting the Postfix mail system",

          
          "(?<rule_3502>)stopping the Postfix mail system",

          
          "(?<rule_3503>)lost connection after \S+ from ([\w\-\.]+)\[%{IP:[Attachment][RawLog][Content][source][address]}\]",

          
          "(?<rule_3504>)%{NOTSPACE:id}: from=\<%{NOTSPACE:[Attachment][RawLog][Content][source][address]}\>, size=(\d{9,}), nrcpt=\d+ \(queue active\)",

          
          "(?<rule_3505>)%{NOTSPACE:id}: to=\<%{NOTSPACE:dst}\>, orig_to=\<%{NOTSPACE:orig_dst}\>, relay=\S+, delay=\S+, delays=%{NOTSPACE:delays}, dsn=\S+, status=sent \(delivered to mailbox\)"

        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
