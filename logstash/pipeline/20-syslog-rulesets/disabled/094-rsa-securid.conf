input {
  pipeline { address => "syslog-ruleset-rsa-securid" }
}

filter {
  mutate { add_tag => "ruleset-rsa-securid" }
  if "aceserver" in [Attachment][RawLog][Content][message] {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_24801>)(?=User)%{DATA:[Attachment][RawLog][Content][event][reason]} \(Login:'%{DATA:[Attachment][RawLog][Content][user][target][name]}'; User Name:'(?<usrName>[^']*)'; Token:'(?<token>[^']*)'; Group:'(?<group>[^']*)'; Site:'(?<Site>[^']*)'; Agent Host:'%{IPORHOST:[Attachment][RawLog][Content][source][address]}'; Server:'%{IPORHOST:[Attachment][RawLog][Content][destination][address]}'\)",

          
          "(?<rule_24802>)(?=ACCESS DENIED)%{DATA:[Attachment][RawLog][Content][event][reason]} \(Login:'%{DATA:[Attachment][RawLog][Content][user][target][name]}'; User Name:'(?<usrName>[^']*)'; Token:'(?<token>[^']*)'; Group:'(?<group>[^']*)'; Site:'(?<Site>[^']*)'; Agent Host:'%{IPORHOST:[Attachment][RawLog][Content][source][address]}'; Server:'%{IPORHOST:[Attachment][RawLog][Content][destination][address]}'\)",

          
          "(?<rule_24803>)(?=PASSCODE REUSE ATTACK)%{DATA:[Attachment][RawLog][Content][event][reason]} detected \(Login:'%{DATA:[Attachment][RawLog][Content][user][target][name]}'; User Name:'(?<usrName>[^']*)'; Token:'(?<token>[^']*)'; Group:'(?<group>[^']*)'; Site:'(?<Site>[^']*)'; Agent Host:'%{IPORHOST:[Attachment][RawLog][Content][source][address]}'; Server:'%{IPORHOST:[Attachment][RawLog][Content][destination][address]}'\)",

          
          "(?<rule_24804>)(?=Token disabled, suspect stolen)%{DATA:[Attachment][RawLog][Content][event][reason]} \(Login:'%{DATA:[Attachment][RawLog][Content][user][target][name]}'; User Name:'(?<usrName>[^']*)'; Token:'(?<token>[^']*)'; Group:'(?<group>[^']*)'; Site:'(?<Site>[^']*)'; Agent Host:'%{IPORHOST:[Attachment][RawLog][Content][source][address]}'; Server:'%{IPORHOST:[Attachment][RawLog][Content][destination][address]}'\)"
        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
