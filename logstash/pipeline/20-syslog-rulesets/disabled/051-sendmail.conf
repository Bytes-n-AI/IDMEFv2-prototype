input {
  pipeline { address => "syslog-ruleset-sendmail" }
}

filter {
  mutate { add_tag => "ruleset-sendmail" }
  if [Attachment][RawLog][Content][process][name] == "sendmail" {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_3700>)ruleset=check_relay, arg1=(?<argument>[\[\]\w\-\.]+), arg2=%{IP:ip}, relay=(?<uid>.*)\[%{IP:[Attachment][RawLog][Content][source][address]}\], reject=550 5\.7\.1 %{DATA:data}",

          
          "(?<rule_3701>)%{NOTSPACE:id}: ruleset=check_rcpt, arg1=\<%{NOTSPACE:[Attachment][RawLog][Content][user][target][name]}@%{NOTSPACE:domain}\>, relay=(?<uid>.*)\[%{IP:[Attachment][RawLog][Content][source][address]}\], reject=550 5\.7\.1 %{DATA:data}",

          
          "(?<rule_3702>)%{NOTSPACE:id}: ruleset=check_mail, arg1=\<%{NOTSPACE:[Attachment][RawLog][Content][user][target][name]}@%{NOTSPACE:domain}\>, relay=(?<uid>.*)\[%{IP:[Attachment][RawLog][Content][source][address]}\], reject=553 5\.1\.8 %{DATA:data}",

          
          "(?<rule_3703>)sendmail shutdown succeeded",

          
          "(?<rule_3704>)sendmail startup succeeded",

          
          "(?<rule_3705>)%{NOTSPACE:id}: (?<argument>[\w\-\.]+) \[%{IP:[Attachment][RawLog][Content][source][address]}\] did not issue MAIL/EXPN/VRFY/ETRN during connection to MTA",

          
          "(?<rule_3706>)%{NOTSPACE:id}: \<%{NOTSPACE:user}@%{NOTSPACE:domain}\>... User unknown",

          
          "(?<rule_3707>)%{NOTSPACE:id}: Authentication-Warning: (?<domain>[\w\-\.]+): %{NOTSPACE:name} set sender to %{NOTSPACE:[Attachment][RawLog][Content][user][target][name]}@%{NOTSPACE:domain} using",

          
          "(?<rule_3708>)%{NOTSPACE:id}: (?<domain>[\w\-\.]+) \[%{IP:[Attachment][RawLog][Content][source][address]}\]: VRFY %{NOTSPACE:name} \[rejected\]",

          
          "(?<rule_3709>)%{NOTSPACE:id}: (?<domain>[\w\-\.]+) \[%{IP:[Attachment][RawLog][Content][source][address]}\]: EXPN %{NOTSPACE:name} \[rejected\]",

          
          "(?<rule_3710>)%{NOTSPACE:id}: from=%{NOTSPACE:[Attachment][RawLog][Content][user][name]}, size=\d+, class=\d+, nrcpts=\d+, msgid=\<%{NOTSPACE:user}@%{NOTSPACE:domain}\>, relay=%{NOTSPACE:user_}@%{NOTSPACE:domain_}",

          
          "(?<rule_3711>)%{NOTSPACE:id}: from=%{NOTSPACE:[Attachment][RawLog][Content][user][name]}, size=\d+, class=\d+, nrcpts=%{INT:id}, msgid=%{NOTSPACE:user} proto=ESMTP, daemon=MTA, relay=(?<data>\S+ )?\[%{IP:[Attachment][RawLog][Content][source][address]}]",

          
          "(?<rule_3712>)%{NOTSPACE:id}: to=%{NOTSPACE:[Attachment][RawLog][Content][user][target][name]}, delay=%{NOTSPACE:delay}, xdelay=%{NOTSPACE:xdelay}, mailer=%{NOTSPACE:mailer}, pri=%{INT:class_id}, relay=(?<relay>\S+?) \[%{IP:[Attachment][RawLog][Content][source][address]}\], dsn=%{NOTSPACE:dsn}, stat=%{NOTSPACE:stat} \(%{NOTSPACE:status}: queued as %{NOTSPACE:data}\)?"

        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
