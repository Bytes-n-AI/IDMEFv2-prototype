input {
  pipeline { address => "syslog-ruleset-syslog-ng" }
}

filter {
  mutate { add_tag => "ruleset-syslog-ng" }
  if [Attachment][RawLog][Content][process][name] == "syslog-ng" {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_23001>)syslog-ng version ([\d.]+) going down",

          
          "(?<rule_23002>)syslog-ng version ([\d.]+) starting",

          
          "(?<rule_23003>)[nN]ew configuration initialized",

          
          "(?<rule_23004>)STATS: dropped ([0-9]\d*)",

          
          "(?<rule_23005>)Error connecting to remote host \w+\(%{IP:[Attachment][RawLog][Content][destination][address]}:%{POSINT:[Attachment][RawLog][Content][destination][port]:int}\), (.+)",

          
          "(?<rule_23006>)Connection broken to \w+\(%{IP:[Attachment][RawLog][Content][destination][address]}:%{POSINT:[Attachment][RawLog][Content][destination][port]:int}\), reopening in \d+ seconds"
        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
