input {
  pipeline { address => "syslog-ruleset-suhosin" }
}

filter {
  mutate { add_tag => "ruleset-suhosin" }
  if [Attachment][RawLog][Content][process][name] == "suhosin" {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_8001>)ALERT - configured request variable name length limit exceeded - dropped variable '\S+' \(attacker '%{NOTSPACE:[Attachment][RawLog][Content][source][address]}', file '\S+'\)",

          
          "(?<rule_8002>)ALERT - tried to register forbidden variable '\S+' through (.*) variables \(attacker '%{NOTSPACE:[Attachment][RawLog][Content][source][address]}', file '\S+'\)",

          
          "(?<rule_8003>)ALERT - configured \S+ variable value length limit exceeded - dropped variable '\S+' \(attacker '%{NOTSPACE:[Attachment][RawLog][Content][source][address]}', file '\S+'\)",

          
          "(?<rule_8004>)ALERT - ASCII-NUL chars not allowed within request variables - dropped variable '\S+' \(attacker '%{NOTSPACE:[Attachment][RawLog][Content][source][address]}', file '\S+'\)"
        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
