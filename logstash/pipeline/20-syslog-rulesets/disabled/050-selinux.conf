input {
  pipeline { address => "syslog-ruleset-selinux" }
}

filter {
  mutate { add_tag => "ruleset-selinux" }
  if "avc:" in [Attachment][RawLog][Content][message] {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_4000>)\s*denied  \{ (?<desc>[\w ]+) \} for  pid=%{INT:pid} exe=%{DATA:command} name=(shadow|passwd|group) dev=%{NOTSPACE:dev} ino=%{NOTSPACE:id_user} scontext=%{NOTSPACE:[Attachment][RawLog][Content][user][name]}:%{NOTSPACE:ruser}:%{NOTSPACE:tuser} tcontext=%{NOTSPACE:[Attachment][RawLog][Content][user][target][name]}:%{NOTSPACE:obj}:",

          
          "(?<rule_4001>)\s*denied  \{ (?<desc>[\w ]+) \} for  pid=%{INT:pid} exe=%{DATA:command} path=(?<path>\S*)bin(?<shell>\S*)sh dev=%{NOTSPACE:dev} ino=%{NOTSPACE:id_user} scontext=%{NOTSPACE:[Attachment][RawLog][Content][user][name]}:%{NOTSPACE:ruser}:%{NOTSPACE:tuser} tcontext=%{NOTSPACE:[Attachment][RawLog][Content][user][target][name]}:%{NOTSPACE:obj}:",

          
          "(?<rule_4002>)\s*denied  \{ (?<desc>[\w ]+) \} for  pid=%{INT:pid} exe=%{DATA:command} name=(?<shell>\S*)sh dev=%{NOTSPACE:dev} ino=%{NOTSPACE:id_user} scontext=%{NOTSPACE:[Attachment][RawLog][Content][user][name]}:%{NOTSPACE:ruser}:%{NOTSPACE:tuser} tcontext=%{NOTSPACE:[Attachment][RawLog][Content][user][target][name]}:%{NOTSPACE:obj}:",

          
          "(?<rule_4003>)\s*denied  \{ (?<desc>[\w ]+) \} for  pid=%{INT:pid} exe=%{DATA:command} path=/var/log/(?<file>\S*) dev=%{NOTSPACE:dev} ino=%{NOTSPACE:id_user} scontext=%{NOTSPACE:[Attachment][RawLog][Content][user][name]}:%{NOTSPACE:ruser}:%{NOTSPACE:tuser} tcontext=%{NOTSPACE:[Attachment][RawLog][Content][user][target][name]}:%{NOTSPACE:obj}:",

          
          "(?<rule_4005>)\s*denied  \{ (?<desc>[\w ]+) \} for  pid=%{INT:pid} exe=%{DATA:command} path=(?<path>\S*) dev=%{NOTSPACE:dev} ino=%{NOTSPACE:id_user} scontext=%{NOTSPACE:[Attachment][RawLog][Content][user][name]}:%{NOTSPACE:ruser}:%{NOTSPACE:tuser} tcontext=%{NOTSPACE:[Attachment][RawLog][Content][user][target][name]}:%{NOTSPACE:obj}:",

          
          "(?<rule_4006>)\s*denied  \{ (?<desc>[\w ]+) \} for  pid=%{INT:pid} path=%{NOTSPACE:path} dev=%{NOTSPACE:dev} ino=%{NOTSPACE:id_user} scontext=%{NOTSPACE:[Attachment][RawLog][Content][user][name]}:%{NOTSPACE:ruser}:%{NOTSPACE:tuser} tcontext=%{NOTSPACE:[Attachment][RawLog][Content][user][target][name]}:%{NOTSPACE:obj}:",

          
          "(?<rule_4007>)\s*denied  \{ (?<desc>[\w ]+) \} for  pid=%{INT:pid} exe=%{DATA:command} capability=%{NOTSPACE:id}(\s+)scontext=%{NOTSPACE:[Attachment][RawLog][Content][user][name]}:%{NOTSPACE:ruser}:%{NOTSPACE:tuser}\s+tcontext=%{NOTSPACE:[Attachment][RawLog][Content][user][target][name]}:%{NOTSPACE:obj}:",

          
          "(?<rule_4008>)\s*denied  \{ (?<desc>[\w ]+) \} for  pid=%{INT:pid} exe=%{NOTSPACE:command} name=%{NOTSPACE:name} dev=%{NOTSPACE:dev} ino=%{NOTSPACE:id_user} scontext=%{NOTSPACE:[Attachment][RawLog][Content][user][name]}:%{NOTSPACE:ruser}:%{NOTSPACE:tuser} tcontext=%{NOTSPACE:[Attachment][RawLog][Content][user][target][name]}:%{NOTSPACE:obj}:",

          
          "(?<rule_4009>)\s*denied  \{ (?<desc>[\w ]+) \} for  pid=%{INT:pid} exe=%{GREEDYDATA:command} name=%{GREEDYDATA:name} dev=%{GREEDYDATA:dev} ino=%{GREEDYDATA:id_user} scontext=%{NOTSPACE:[Attachment][RawLog][Content][user][name]}:%{NOTSPACE:ruser}:%{NOTSPACE:tuser} tcontext=%{NOTSPACE:[Attachment][RawLog][Content][user][target][name]}:%{NOTSPACE:obj}:"
        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
