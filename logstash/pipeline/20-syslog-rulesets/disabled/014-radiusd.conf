input {
  pipeline { address => "syslog-ruleset-radiusd" }
}

filter {
  mutate { add_tag => "ruleset-radiusd" }
  if [Attachment][RawLog][Content][process][name] == "radiusd" {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_35000>)Ready to process requests",

          
          "(?<rule_35001>)Login incorrect: \[%{NOTSPACE:[Attachment][RawLog][Content][user][name]}\] \(from client %{NOTSPACE:client} port %{POSINT:[Attachment][RawLog][Content][source][port]:int} cli %{IP:[Attachment][RawLog][Content][source][address]}\)",

          
          "(?<rule_35002>)Login incorrect: \[%{NOTSPACE:[Attachment][RawLog][Content][user][name]}\] \(from client %{NOTSPACE:client} port %{POSINT:[Attachment][RawLog][Content][source][port]:int} cli ip:source-ip=%{IP:[Attachment][RawLog][Content][source][address]}\)",

          
          "(?<rule_35003>)Login OK: \[%{NOTSPACE:[Attachment][RawLog][Content][user][name]}\] \(from client %{NOTSPACE:client} port %{POSINT:[Attachment][RawLog][Content][source][port]:int} cli %{IP:[Attachment][RawLog][Content][source][address]}\)",

          
          "(?<rule_35004>)Login OK: \[%{NOTSPACE:[Attachment][RawLog][Content][user][name]}\] \(from client %{NOTSPACE:client} port %{POSINT:[Attachment][RawLog][Content][source][port]:int}\)"
        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
