input {
  pipeline { address => "syslog-ruleset-cisco-vpn" }
}

filter {
  mutate { add_tag => "ruleset-cisco-vpn" }
  if "SEV=" in [Attachment][RawLog][Content][message] {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_300>)(?<data>.*)%{IP:[Attachment][RawLog][Content][source][address]}  User \[%{NOTSPACE:[Attachment][RawLog][Content][user][name]}\], Group \[%{NOTSPACE}\] disconnected:  Duration: %{NOTSPACE}  Bytes xmt: %{NOTSPACE}  Bytes rcv: %{INT}  Reason: %{GREEDYDATA:reason}",

          
          "(?<rule_301>)(?<data>.*)%{IP:[Attachment][RawLog][Content][source][address]}  Authentication rejected: Reason = %{GREEDYDATA:reason} handle = %{INT}, server = %{NOTSPACE}, user = %{USER:[Attachment][RawLog][Content][user][target][name]}, domain = %{DATA:domain}",

          
          "(?<rule_302>)(?<data>.*)%{IP:[Attachment][RawLog][Content][source][address]}  Group \[%{NOTSPACE:group}\] User \[%{USER:[Attachment][RawLog][Content][user][target][name]}\] User %{NOTSPACE} authenticated",

          
          "(?<rule_303>)(?<data>.*) User \[ %{USER:[Attachment][RawLog][Content][user][target][name]} \] Protocol \[ %{NOTSPACE:[Attachment][RawLog][Content][network][protocol]} \] attempted ADMIN logon.. Status: <REFUSED>",

          
          "(?<rule_304>)(?<data>.*) User \[ %{USER:[Attachment][RawLog][Content][user][target][name]} \] Protocol \[ %{NOTSPACE:[Attachment][RawLog][Content][network][protocol]} \] attempted ADMIN logon.. Status: <ACCESS GRANTED>"
        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
