input {
  pipeline { address => "syslog-ruleset-checkpoint" }
}

filter {
  mutate { add_tag => "ruleset-checkpoint" }
  if "product:" in [Attachment][RawLog][Content][message] {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_100>)drop   %{IPORHOST} (<|>)([\w-]+) product: VPN-1 & FireWall-1; src: %{IPORHOST:[Attachment][RawLog][Content][source][address]}; s_port: %{DATA:[Attachment][RawLog][Content][source][port]}; dst: %{IPORHOST:[Attachment][RawLog][Content][destination][address]}; service: %{DATA:[Attachment][RawLog][Content][destination][port]}; proto: %{NOTSPACE:[Attachment][RawLog][Content][network][transport]};",

          
  "(?<rule_104>)accept %{IPORHOST} (<|>)([\w-]+) product: VPN-1 & FireWall-1; src: %{IPORHOST:[Attachment][RawLog][Content][source][address]}; s_port: %{DATA:[Attachment][RawLog][Content][source][port]}; dst: %{IPORHOST:[Attachment][RawLog][Content][destination][address]}; service: %{DATA:[Attachment][RawLog][Content][destination][port]}; proto: %{NOTSPACE:[Attachment][RawLog][Content][network][transport]};",

          
          #"(?<rule_110>)product: VPN-1 & FireWall-1; src: %{IPORHOST:[Attachment][RawLog][Content][source][address]}; s_port: %{DATA:[Attachment][RawLog][Content][source][port]}; dst: %{IPORHOST:[Attachment][RawLog][Content][destination][address]}; service: %{DATA:[Attachment][RawLog][Content][destination][port]}; proto: %{WORD:protocol}; rule: %{INT:ruleId}",

          
          "(?<rule_112>)product: SmartDefense;( service: %{DATA:[Attachment][RawLog][Content][destination][port]};)?%{DATA}attack: %{DATA:[Attachment][RawLog][Content][event][reason]}; dst: %{IPORHOST:[Attachment][RawLog][Content][destination][address]}; src: %{IPORHOST:[Attachment][RawLog][Content][source][address]}",

          
          "(?<rule_115>)product: SmartDefense;%{DATA}attack: %{DATA:[Description]}; src: %{IPORHOST:[Attachment][RawLog][Content][source][address]}; s_port: %{DATA:[Attachment][RawLog][Content][source][port]}; dst: %{IPORHOST:[Attachment][RawLog][Content][destination][address]}; service: %{DATA:[Attachment][RawLog][Content][destination][port]}; proto: %{NOTSPACE:[Attachment][RawLog][Content][network][transport]}",

          
          "(?<rule_119>)product: SmartDefense;%{DATA}attack: %{DATA:[Description]}; src: %{IPORHOST:[Attachment][RawLog][Content][source][address]}; dst: %{IPORHOST:[Attachment][RawLog][Content][destination][address]}",

          
          "(?<rule_127>)System Alert message: %{DATA:[Description]}; Object: %{IPORHOST:[Attachment][RawLog][Content][destination][address]};%{DATA}product: System Monitor"
        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
