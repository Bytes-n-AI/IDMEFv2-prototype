input {
  pipeline { address => "syslog-ruleset-bluecoat-system" }
}

filter {
  mutate { add_tag => "ruleset-bluecoat-system" }
  if [Attachment][RawLog][Content][process][name] == "ProxySG" {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_11001>)\w+\s*Access (?:L|l)og.+Connecting to primary server (?<serverName>.+) on port %{INT:port}.+NORMAL_EVENT",

          
          "(?<rule_11002>)\w+\s*DNS lookup to (?<server>.+) for %{NOTSPACE:[Attachment][RawLog][Content][network][transport]} rejected by server\.\(.+NORMAL_EVENT",

          
          "(?<rule_11003>)\w+\s*Read/write mode entered from serial for user '?(?<userName>.+)'?\(",

          
          "(?<rule_11007>)\w+\s*Read/write mode entered from %{IP:[Attachment][RawLog][Content][source][address]} for user '(?<UserName>.+)'\(.+NORMAL_EVENT",

          
          "(?<rule_11008>)\w+\s*Enable password authentication from %{IP:[Attachment][RawLog][Content][source][address]} failed for user '(?<userName>.+)'\(.+NORMAL_EVENT",

          
          "(?<rule_11009>)\w+\s*Console user password authentication from %{IP:[Attachment][RawLog][Content][source][address]} failed for user '(?<userName>.+)'.+NORMAL_EVENT",

          
          "(?<rule_11010>)\w+\s*NULL character found in the request line from %{IP:[Attachment][RawLog][Content][source][address]}",

          
          "(?<rule_11011>)\w+\s*Failed (?:password|none) for (?<src>.+)\s+ssh2.+NORMAL_EVENT",

          
          "(?<rule_11012>)\w+\s*Administrator login from %{IP:[Attachment][RawLog][Content][source][address]} denied.+NORMAL_EVENT",

          
          "(?<rule_11013>)\w+\s*Access (?:L|l)og .+:.+SEVERE_ERROR",

          
          "(?<rule_11014>)\w+\s*CFSSL.+SEVERE_ERROR",

          
          "(?<rule_11016>)\w+\s*Administrator login from %{IP:[Attachment][RawLog][Content][source][address]}, user '(?<usrName>.+)'.+NORMAL_EVENT",

          
          "(?<rule_11017>)\w+\s*Local: Authentication failed from %{IP:[Attachment][RawLog][Content][source][address]}: no such user in realm '(?<usrName>.+)'?.+NORMAL_EVENT",


          
          "(?<rule_11018>)\w+\s*NTP: Tried all configured servers. Unable to obtain NTP update due to NTP server errors",

          
          "(?<rule_11019>)\w+\s*SSH admin at %{IP:[Attachment][RawLog][Content][source][address]}, (?<srcUser>[^,]+), changed password for user '(?<usrName>.+)' in local user list '(?<list>.+)'",

          
          "(?<rule_11020>)\w+\s*SSH admin at %{IP:[Attachment][RawLog][Content][source][address]}, (?<srcUser>[^,]+), added user '(?<usrName>.+)' to local user list '(?<list>.+)'",

          
          "(?<rule_>)\w+\s*SSH admin at %{IP:[Attachment][RawLog][Content][source][address]}, (?<srcUser>[^,]+), added user '(?<usrName>.+)' to local user list '(?<list>.+)'",

          
          "(?<rule_11021>)\w+\s*(?:Management Console|SSH) admin at %{IP:[Attachment][RawLog][Content][destination][address]}, (?<desc>[^\(]+)",

          
          "(?<rule_11022>)\w+\s*Accepted password for (?<user>[^\s]+).+NORMAL_EVENT",

          
          "(?<rule_11023>)\w+\s*Failed publickey for (?<user>[^\(]+).+NORMAL_EVENT",

          
          "(?<rule_11024>)\w+\s*DNS service restored.+NORMAL_EVENT",

          
          "(?<rule_11025>)\w+\s*Serial admin initiated reboot.+CONFIGURATION_EVENT",

          
          "(?<rule_11026>)\w+\s*Unable to send the keep alive message, make sure keep alive interval is less than the server timeout.+NORMAL_EVENT"
        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
