input {
  pipeline { address => "syslog-ruleset-extreme-switch" }
}

filter {
  mutate { add_tag => "ruleset-extreme-switch" }
  if "MSM-A" in [Attachment][RawLog][Content][message] {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_20101>)Login passed for user %{NOTSPACE:[Attachment][RawLog][Content][user][name]} through %{NOTSPACE:[Attachment][RawLog][Content][network][protocol]} \(%{IPORHOST:[Attachment][RawLog][Content][destination][address]}\)",

          
          "(?<rule_20102>)User %{NOTSPACE:[Attachment][RawLog][Content][user][name]} logout from %{NOTSPACE:[Attachment][RawLog][Content][network][protocol]} \(%{IPORHOST:[Attachment][RawLog][Content][source][address]}\)",

          
          "(?<rule_20103>)Port %{NOTSPACE:interfaceport} link down",

          
          "(?<rule_20104>)%{IPORHOST:[Attachment][RawLog][Content][source][address]} \(%{DATA:[Attachment][RawLog][Content][network][protocol]}\) %{WORD:[Attachment][RawLog][Content][user][name]}: upload configuration %{NOTSPACE} %{NOTSPACE:file}"
        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
