input {
  pipeline { address => "syslog-ruleset-arpwatch" }
}

filter {
  mutate { add_tag => "ruleset-arpwatch" }
  if [Attachment][RawLog][Content][process][name] == "arpwatch" {
    grok {
      match => {
        "[Attachment][RawLog][Content][message]" => [
          
          "(?<rule_4200>)new (station|activity) %{IP:[Attachment][RawLog][Content][source][address]} ([\da-f:]+)",

          
          "(?<rule_4201>)(flip flop|changed ethernet address|reused old ethernet address) %{IP:[Attachment][RawLog][Content][source][address]} ([\da-f:]+) \(([\da-f:]+)\)",

          
          "(?<rule_4202>)(ethernet|ip) broadcast %{IP:[Attachment][RawLog][Content][source][address]} ([\da-f:]+)",

          
          "(?<rule_4203>)bogon %{IP:[Attachment][RawLog][Content][source][address]} ([\da-f:]+)",

          
          "(?<rule_4204>)ethernet mismatch %{IP:[Attachment][RawLog][Content][source][address]} ([\da-f:]+) \(([\da-f:]+)\)"
        ]
      }

      keep_empty_captures => true
      break_on_match => true
      ecs_compatibility => "disabled"
      add_tag => [ "last"]
    }
  }
}

output {
  if "last" in [tags] {
    pipeline { send_to => "output-norm" }
  } else {
    pipeline { send_to => "syslog-pcre" }
  }
}
