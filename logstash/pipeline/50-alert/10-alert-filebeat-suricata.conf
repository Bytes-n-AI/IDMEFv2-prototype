filter {
  if [Attachment][RawLog][Content][suricata][eve][event_type] == "alert" and [Attachment][RawLog][Content][suricata][eve][alert][action] == "allowed" {
    # See the file pointed to by "classification-file" in /etc/suricata/suricata.yaml
    # (usually /etc/suricata/classification.config) for the full list of Suricata categories.
    # Please note that only the classification's description is passed to logstash.
    # You cannot use the classification's short identifier in the dictionary below.
    translate {
      field       => "[Attachment][RawLog][Content][suricata][eve][alert][category]"
      destination => "[Category][0]"
      dictionary  => {
        "Information Leak"                                    => "Information.DataLeak"
        "Large Scale Information Leak"                        => "Information.DataLeak"
        "Denial of Service"                                   => "Availability.DoS"
        "Successful User Privilege Gain"                      => "Intrusion.UserCompromise"
        "Successful Administrator Privilege Gain"             => "Intrusion.AdminCompromise"
        "Detection of a Denial of Service Attack"             => "Availability.DoS"
        "A Network Trojan was detected"                       => "Malicious.System"
        "Attempt to login by a default username and password" => "Attempt.Login"
        "Exploit Kit Activity Detected"                       => "Malicious.System"
        "Domain Observed Used for C2 Detected"                => "Malicious.Botnet"
      }
      fallback    => "Other.Undetermined"
      exact       => true
    }

    translate {
      field       => "[Attachment][RawLog][Content][suricata][eve][alert][severity]"
      destination => "[Severity]"
      dictionary  => {
        "1" => "High"
        "2" => "Medium"
        "3" => "Low"
        "4" => "Info"
      }
      fallback    => "Unknown"
      exact       => true

      add_field   => {
        # FIXME Use an heuristic to determine who is actually attacking who
        "[@metadata][IDMEFv2][source]" => "source"
        "[@metadata][IDMEFv2][target]" => "destination"
        "[Analyzer][Category][0]"      => "NIDS"
        "[Analyzer][Data]"             => ["Flow", "Protocol", "Network"]
        "[Analyzer][Method][0]"        => "Signature"
        "[Analyzer][Type]"             => "Cyber"
        "[Description]"                => "%{[Attachment][RawLog][Content][suricata][eve][alert][signature]}"
      }

      add_tag    => ['alert']
    }

    if [Attachment][RawLog][Content][suricata][eve][app_proto] {
      mutate {
        add_field => {
          "[Source][0][Protocol][0]"     => "%{[Attachment][RawLog][Content][suricata][eve][app_proto]}"
        }
      }
    }
  }
}
